{"version":3,"sources":["components/CollegeCard.jsx","components/CollegeCardLoading.jsx","services/MockApi.js","pages/CollegeList.jsx","hooks/useCollegeListPagination.jsx","App.js","serviceWorker.js","index.js"],"names":["CollegeCard","detail","reference","tags","rating","ranking","promoted","amenties","discount","offertext","fees_cycle","college_name","nearest_place","original_fees","rating_remarks","discounted_fees","famous_nearest_places","className","ref","alt","src","map","tag","i","key","Array","e","Icon","color","path","mdiStar","size","dangerouslySetInnerHTML","__html","match","reduce","accumulator","value","replace","toLocaleString","join","React","forwardRef","props","CollegeCardLoading","getColleges","pageNumber","limit","Promise","resolve","reject","offset","setTimeout","hasNext","colleges","length","slice","err","CollegeList","useState","setPageNumber","loading","setLoading","setColleges","setHasNext","useEffect","a","respCollges","useCollegeListPagination","observer","useRef","lastCollegeCardRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","lastPageNumber","observe","college","index","createElement","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ySAMA,SAASA,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAE3BC,EAcEF,EAdFE,KACAC,EAaEH,EAbFG,OACAC,EAYEJ,EAZFI,QACAC,EAWEL,EAXFK,SACAC,EAUEN,EAVFM,SACAC,EASEP,EATFO,SACAC,EAQER,EARFQ,UACAC,EAOET,EAPFS,WACAC,EAMEV,EANFU,aACAC,EAKEX,EALFW,cACAC,EAIEZ,EAJFY,cACAC,EAGEb,EAHFa,eACAC,EAEEd,EAFFc,gBACAC,EACEf,EADFe,sBAiCF,OACE,yBAAKC,UAAU,eAAeC,IAAKhB,GACjC,yBAAKe,UAAU,uBACb,yBAAKE,IAAI,UAAUC,IAAI,0BACvB,yBAAKH,UAAU,2BACZd,EAAKkB,KAAI,SAACC,EAAKC,GAAN,OACR,yBAAKC,IAAKD,EAAGN,UAAU,qBACpBK,OAIP,yBAAKL,UAAU,yBAAf,IAAyCZ,IAE1CC,EAAW,yBAAKW,UAAU,wBAAf,YAAuD,KAClEX,EAAW,yBAAKW,UAAU,iCAAoC,KAC/D,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,+BACb,6BACE,0BAAMA,UAAU,qCAAqCb,GADvD,MAIA,6BAAMU,KAGV,yBAAKG,UAAU,yBACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,sBACb,8BAAON,GACP,0BAAMM,UAAU,4BACb,YAAIQ,MAAM,IAAIJ,KAAI,SAACK,EAAGH,GAAJ,OACjB,kBAACI,EAAA,KAAD,CACEC,MAAOL,EAAInB,EAAS,UAAY,UAChCyB,KAAMC,IACNC,KAAM,IACNP,IAAKD,SAKb,yBAAKN,UAAU,yBACb,0BAAMA,UAAU,8BACbL,EAAc,IAEjB,0BAAMK,UAAU,+BACb,MACAL,EAAc,KAGnB,yBAAKK,UAAU,gCACb,0BAAMA,UAAU,+BAAhB,eACA,0BACEe,wBAAyB,CAAEC,OAhFrBjB,EAAsBkB,MAAM,6BAC7BC,QACb,SAACC,EAAaC,GAAd,OACED,EAAYE,QACVD,EADF,oDAE+CA,EAF/C,cAIFrB,OA4EI,yBAAKC,UAAU,8BACb,0BAAMe,wBAAyB,CAAEC,OAxEzBxB,EAAUyB,MAAM,uBAE7BC,QACC,SAACC,EAAaC,GAAd,OACED,EAAYE,QACVD,EADF,mDAE8CA,EAF9C,cAIF5B,GAED6B,QAAQ,OAAQ,wDAChBA,QACC,QACA,+DA8DA,yBAAKrB,UAAU,gCACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,+BAAf,SACIJ,EAAc0B,kBAElB,yBAAKtB,UAAU,0BACZT,EACD,yBAAKS,UAAU,iCAGnB,yBAAKA,UAAU,+BAAf,SACIF,EAAgBwB,kBAEpB,yBAAKtB,UAAU,4BAA4BP,GAC3C,yBAAKO,UAAU,0BAA0BV,EAASiC,KAAK,gBAOlDC,UAAMC,YAAW,SAACC,EAAOzB,GAAR,OAC9B,kBAAC,EAAD,iBAAiByB,EAAjB,CAAwBzC,UAAWgB,QClItB,SAAS0B,IACtB,OACE,yBAAK3B,UAAU,iCACb,yBAAKA,UAAU,wCACf,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,wCACf,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,2C,mCCVV4B,EAAc,WAAiC,IAAhCC,EAA+B,uDAAlB,EAAGC,EAAe,uDAAP,GAClD,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,GAAUL,EAAa,GAAKC,EAClCK,YAAW,WACT,IACEH,EAAQ,CACNI,QAASC,IAASC,OAASJ,EAASJ,EACpCO,SAAUA,IAASE,MAAML,EAAQA,EAASJ,KAE5C,MAAOU,GACPP,EAAOO,MAER,SCiCQC,MAzCf,WAAwB,IAAD,EACeC,mBAAS,GADxB,mBACdb,EADc,KACFc,EADE,OCFR,SAAkCd,GAAa,IAAD,EAC7Ba,oBAAS,GADoB,mBACpDE,EADoD,KAC3CC,EAD2C,OAE3BH,mBAAS,IAFkB,mBAEpDL,EAFoD,KAE1CS,EAF0C,OAG7BJ,oBAAS,GAHoB,mBAGpDN,EAHoD,KAG3CW,EAH2C,KAuB3D,OAlBAC,qBAAU,WACRH,GAAW,GACX,uCAAC,gCAAAI,EAAA,+EAEoDrB,EAC/CC,GAHL,gBAEqBqB,EAFrB,EAEWb,SAAuBD,EAFlC,EAEkCA,QAG/BU,GAAY,SAACT,GAAD,4BAAkBA,GAAlB,YAA+Ba,OAC3CH,EAAWX,GANd,kDAQGU,EAAY,IACZC,GAAW,GATd,yBAWGF,GAAW,GAXd,6EAAD,yDAcC,CAAChB,IAEG,CAAEe,UAASR,UAASC,WAAUC,OAAQD,EAASC,QDlBPa,CAC7CtB,GADMQ,EAHa,EAGbA,SAAUO,EAHG,EAGHA,QAASR,EAHN,EAGMA,QAASE,EAHf,EAGeA,OAI9Bc,EAAWC,mBAEXC,EAAqBC,uBACzB,SAACC,GACKZ,IACAQ,EAASK,SAASL,EAASK,QAAQC,aACvCN,EAASK,QAAU,IAAIE,sBAAqB,SAACC,GACvCA,EAAQ,GAAGC,gBAAkBzB,GAC/BO,GAAc,SAACmB,GAAD,OAAoBA,EAAiB,QAInDN,GAAMJ,EAASK,QAAQM,QAAQP,MAErC,CAACZ,EAASR,IAGZ,OACE,yBAAKpC,UAAU,gBACb,yBAAKA,UAAU,uBAAf,2BACA,yBAAKA,UAAU,uBACZqC,EAASjC,KAAI,SAAC4D,EAASC,GAAV,OACZC,wBAAcnF,EAAa,CACzBkB,IAAK,SAACA,GAAD,OAASgE,IAAU3B,EAAS,GAAKgB,EAAmBrD,IACzDjB,OAAQgF,EACRzD,IAAK0D,OAGRrB,GAAW,YAAIpC,MAAM,IAAIJ,KAAI,SAACK,EAAGH,GAAJ,OAAU,kBAACqB,EAAD,CAAoBpB,IAAKD,UE7B1D6D,MARf,WACE,OACE,yBAAKnE,UAAU,OACb,kBAAC,EAAD,QCKcoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStD,MACvB,2DCZNuD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.fae0c2c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { mdiStar } from \"@mdi/js\";\r\nimport { Icon } from \"@mdi/react\";\r\n\r\nimport \"./CollegeCard.css\";\r\n\r\nfunction CollegeCard({ detail, reference }) {\r\n  const {\r\n    tags,\r\n    rating,\r\n    ranking,\r\n    promoted,\r\n    amenties,\r\n    discount,\r\n    offertext,\r\n    fees_cycle,\r\n    college_name,\r\n    nearest_place,\r\n    original_fees,\r\n    rating_remarks,\r\n    discounted_fees,\r\n    famous_nearest_places,\r\n  } = detail;\r\n\r\n  function getNearestFamous() {\r\n    const matches = famous_nearest_places.match(/(\\d+\\.?\\d*) *(kms?|Kms?)/g);\r\n    return matches.reduce(\r\n      (accumulator, value) =>\r\n        accumulator.replace(\r\n          value,\r\n          `<span class=\"college-card__nearest--bold\">${value}</span>`\r\n        ),\r\n      famous_nearest_places\r\n    );\r\n  }\r\n\r\n  function getOffer() {\r\n    const matches = offertext.match(/\\d+(,\\d+)*(\\.\\d*)?/g);\r\n    return matches\r\n      .reduce(\r\n        (accumulator, value) =>\r\n          accumulator.replace(\r\n            value,\r\n            `<span class=\"college-card__offer--green\">${value}</span>`\r\n          ),\r\n        offertext\r\n      )\r\n      .replace(\"Flat\", \"<span class='college-card__offer--muted'>Flat</span>\")\r\n      .replace(\r\n        \"LOGIN\",\r\n        \"<span class='college-card__offer--button'>LOGIN</span>\"\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"college-card\" ref={reference}>\r\n      <div className=\"college-card__image\">\r\n        <img alt=\"college\" src=\"images/college_02.jpg\" />\r\n        <div className=\"college-card__tag-group\">\r\n          {tags.map((tag, i) => (\r\n            <div key={i} className=\"college-card__tag\">\r\n              {tag}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"college-card__ranking\">#{ranking}</div>\r\n      </div>\r\n      {promoted ? <div className=\"college-card__ribbon\">promoted</div> : null}\r\n      {promoted ? <div className=\"college-card__ribbon--shadow\" /> : null}\r\n      <div className=\"college-card__remarks\">\r\n        <div className=\"college-card__remarks__text\">\r\n          <div>\r\n            <span className=\"college-card__remarks__text--bold\">{rating}</span>\r\n            /5\r\n          </div>\r\n          <div>{rating_remarks}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"college-card__details\">\r\n        <div className=\"college-card__details__general\">\r\n          <div className=\"college-card__name\">\r\n            <span>{college_name}</span>\r\n            <span className=\"college-card__star-group\">\r\n              {[...Array(5)].map((e, i) => (\r\n                <Icon\r\n                  color={i < rating ? \"#444444\" : \"#adadad\"}\r\n                  path={mdiStar}\r\n                  size={0.52}\r\n                  key={i}\r\n                />\r\n              ))}\r\n            </span>\r\n          </div>\r\n          <div className=\"college-card__nearest\">\r\n            <span className=\"college-card__nearest-bold\">\r\n              {nearest_place[0]}\r\n            </span>\r\n            <span className=\"college-card__nearest-muted\">\r\n              {\" | \"}\r\n              {nearest_place[1]}\r\n            </span>\r\n          </div>\r\n          <div className=\"college-card__nearest-famous\">\r\n            <span className=\"college-card__nearest-match\">93% Match: </span>\r\n            <span\r\n              dangerouslySetInnerHTML={{ __html: getNearestFamous() }}\r\n            ></span>\r\n          </div>\r\n          <div className=\"college-card__offer-ribbon\">\r\n            <span dangerouslySetInnerHTML={{ __html: getOffer() }}></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"college-card__details__price\">\r\n          <div className=\"college-card__discount-wrapper\">\r\n            <div className=\"college-card__original-fees\">\r\n              ₹{original_fees.toLocaleString()}\r\n            </div>\r\n            <div className=\"college-card__discount\">\r\n              {discount}\r\n              <div className=\"college-card__discount-dot\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"college-card__discount-fees\">\r\n            ₹{discounted_fees.toLocaleString()}\r\n          </div>\r\n          <div className=\"college-card__fees-cycle\">{fees_cycle}</div>\r\n          <div className=\"college-card__amenties\">{amenties.join(\"  ·  \")}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => (\r\n  <CollegeCard {...props} reference={ref} />\r\n));\r\n","import React from \"react\";\r\n\r\nimport \"./CollegeCard.css\";\r\n\r\nexport default function CollegeCardLoading() {\r\n  return (\r\n    <div className=\"college-card__loading-wrapper\">\r\n      <div className=\"college-card__loading loading-image\" />\r\n      <div className=\"college-card__loading-text\">\r\n        <div className=\"college-card__loading loading-title\" />\r\n        <div className=\"college-card__loading loading-subtitle\" />\r\n        <div className=\"college-card__loading loading-subtitle\" />\r\n        <div className=\"college-card__loading loading-ribbon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { colleges } from \"../assets/colleges.json\";\r\n\r\nexport const getColleges = (pageNumber = 1, limit = 10) => {\r\n  return new Promise((resolve, reject) => {\r\n    const offset = (pageNumber - 1) * limit;\r\n    setTimeout(() => {\r\n      try {\r\n        resolve({\r\n          hasNext: colleges.length > offset + limit,\r\n          colleges: colleges.slice(offset, offset + limit),\r\n        });\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    }, 1000);\r\n  });\r\n};\r\n","import React, { createElement, useState, useRef, useCallback } from \"react\";\r\n\r\nimport \"./CollegeList.css\";\r\nimport { CollegeCard, CollegeCardLoading } from \"../components\";\r\nimport { useCollegeListPagination } from \"../hooks\";\r\n\r\nfunction CollegeList() {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const { colleges, loading, hasNext, length } = useCollegeListPagination(\r\n    pageNumber\r\n  );\r\n\r\n  const observer = useRef();\r\n\r\n  const lastCollegeCardRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasNext) {\r\n          setPageNumber((lastPageNumber) => lastPageNumber + 1);\r\n        }\r\n      });\r\n\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasNext]\r\n  );\r\n\r\n  return (\r\n    <div className=\"college-list\">\r\n      <div className=\"college-list__title\">Colleges in North India</div>\r\n      <div className=\"college-list__items\">\r\n        {colleges.map((college, index) =>\r\n          createElement(CollegeCard, {\r\n            ref: (ref) => index === length - 1 && lastCollegeCardRef(ref),\r\n            detail: college,\r\n            key: index,\r\n          })\r\n        )}\r\n        {loading && [...Array(4)].map((e, i) => <CollegeCardLoading key={i} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollegeList;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { getColleges } from \"../services\";\r\n\r\nexport default function useCollegeListPagination(pageNumber) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [colleges, setColleges] = useState([]);\r\n  const [hasNext, setHasNext] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    (async function fetchColleges() {\r\n      try {\r\n        const { colleges: respCollges, hasNext } = await getColleges(\r\n          pageNumber\r\n        );\r\n        setColleges((colleges) => [...colleges, ...respCollges]);\r\n        setHasNext(hasNext);\r\n      } catch (err) {\r\n        setColleges([])\r\n        setHasNext(true)\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [pageNumber]);\r\n\r\n  return { loading, hasNext, colleges, length: colleges.length };\r\n}\r\n","import React from \"react\";\n\nimport { CollegeList } from \"./pages\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CollegeList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}